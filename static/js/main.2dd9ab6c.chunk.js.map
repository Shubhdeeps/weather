{"version":3,"sources":["Context/numberContext.js","Components/Header/Header.js","Components/Footer/Footer.js","Components/Body/One.js","Components/Body/Three.js","Assets/Icons/WeatherIcon.js","Components/Body/Day.js","Assets/Icons/Icons.js","Components/Body/MainWeather.js","Components/Body/Four.js","Colors/Color.js","Components/Body/BgImage.js","Components/Body/Body.js","Components/Component.js","Service/getWholeWeather.js","Components/Header/PrintList.js","Components/Header/HeaderExtention.js","Service/cityPrediction.js","Service/assets.js","App.js","Service/getCountries.js","index.js"],"names":["weatherContext","React","createContext","Header","useContext","setToggle","toggle","history","setSearchItem","singleCountry","colorScheme","className","style","background","primary","color","secondary","onClick","src","flag","alt","name","Footer","One","weathe","useState","array","setArray","map","x","id","data","hourly","console","log","Day","date","Date","dt","getHours","Math","round","temp","weather","main","Three","current","month","toLocaleString","capital","getDate","getFullYear","WeatherIcon","iconType","type","Provider","value","size","getDay","min","max","description","rain","WeatherObject","Sun","width","height","viewBox","fill","xmlns","filter","cx","cy","r","y","filterUnits","result","in","values","radius","operator","dx","dy","stdDeviation","in2","mode","x1","y1","x2","y2","gradientUnits","offset","Moon","d","Cloud","rx","ry","CloudSun","RainCloud","SnowCloud","Wind","stroke","transform","CloudMoon","Thunderstorm","Fog","Tornado","MainWeather","Image","Main","sunrise","sunset","clouds","Four","humidity","pressure","wind_speed","feels_like","text","daily","Colors","ColorOne","transparent","ColorTwo","ColorThree","ColorFour","ColorFive","ColorSix","ColorSeven","BgImage","cla","setColorScheme","image","fields","file","url","Color","Body","Component","getWeather","setData","lat","long","baseURL","process","axios","get","then","response","dataRetrived","PrintList","searchItem","setHistory","setSingleCountry","setWeather","country","slice","undefined","find","prevValue","item","latlng","countryData","z","alpha3Code","split","lon","countryClick","HeaderExtention","searchRef","useRef","getData","svghandleClick","input","useEffect","placeholder","ref","onChange","toUpperCase","match","client","contentful","space","accessToken","App","setBackground","ip","setIP","a","res","latitude","longitude","setCountry","Weather","getEntries","includes","Asset","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dd9ab6c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport const weatherContext = React.createContext(null);","import React, { useContext } from 'react'\r\nimport { weatherContext } from '../../Context/numberContext';\r\n\r\nconst Header = () => {\r\n    const {setToggle, toggle, history, setSearchItem, singleCountry, colorScheme} = useContext(weatherContext)\r\n\r\n    const handleClick = () => {\r\n      setToggle(!toggle);\r\n      setSearchItem(history) \r\n    }\r\n\r\n    return(\r\n        <> \r\n          <div className=\"header\" >\r\n            <div className=\"head\" style={{background: colorScheme.primary}}>\r\n              <h2> <span style={{color: colorScheme.secondary}} >W</span>ORLD WEATHER WEB</h2>\r\n              <div className=\"search-box\" onClick={() => handleClick()}>\r\n                <div> <img src={singleCountry.flag} alt='flag' /></div>\r\n                <h2>{singleCountry.name}</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n             \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useContext } from 'react'\r\nimport { weatherContext } from '../../Context/numberContext';\r\n\r\nconst Footer = () => {\r\n  const {colorScheme} = useContext(weatherContext)\r\n    return(\r\n        <> \r\n          <div className=\"footer\" >\r\n            <div className=\"foot\" style={{background: colorScheme.primary}}>\r\n\r\n            </div>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { AiOutlineArrowUp, AiOutlineArrowDown } from \"react-icons/ai\";\r\nimport React, { useContext } from 'react'\r\nimport { weatherContext } from '../../Context/numberContext';\r\n\r\nconst One = () => {\r\n  const {colorScheme, weathe} = useContext(weatherContext)\r\n \r\n  const [array, setArray] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const handlePressPositive = () => {\r\n    if(array[0] <= 15){\r\n    setArray(array.map(x => {\r\n             return(++x)\r\n     }))\r\n     console.log(array)\r\n    }\r\n  }\r\n  const handlePressNegative = () => {\r\n    if(array[0] > 1){\r\n    setArray(array.map(x => {\r\n             return(--x)\r\n     }))\r\n    }\r\n  }\r\n    return(\r\n      <>\r\n         <div onClick={() => handlePressNegative()} className='circle' style={{background: colorScheme.secondary}}><AiOutlineArrowUp className='arrow'/></div>\r\n         {\r\n            array.map(x => { \r\n              return(\r\n                <div id=\"container-one\" className='box' style={{background: colorScheme.secondary}}> <Day data={weathe.hourly[x]} colorScheme={colorScheme} /> </div>\r\n              )\r\n            })\r\n         }\r\n         <div onClick={() => handlePressPositive()} className='circle' style={{background: colorScheme.secondary}}><AiOutlineArrowDown className='arrow' /></div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default One;\r\n\r\nconst Day = ({data, colorScheme}) => {\r\n  const date = new Date(data.dt * 1000);\r\n\r\n  return(\r\n    <>\r\n    <span> {date.getHours()}:00 </span>  <div className='box2' style={{background: colorScheme.primary}}><span>{Math.round(data.temp)}° {data.weather[0].main}</span></div> \r\n    </>\r\n  )\r\n}","import React, {useContext} from 'react'\r\nimport { weatherContext } from \"../../Context/numberContext\"\r\n\r\nconst Three = () => {\r\n\r\n    const  { weathe, singleCountry } = useContext(weatherContext);\r\n\r\n    const dt = weathe.current.dt;\r\n    const date = new Date(dt*1000);\r\n    const month = date.toLocaleString('default', { month: 'long' });\r\n    return(\r\n        <>\r\n         <h2>{singleCountry.capital}</h2>\r\n         <p> {date.getDate()} {month}, {date.getFullYear()}</p>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Three;","import { WiRain } from \"react-icons/wi\";\r\nimport { FiSun } from \"react-icons/fi\";\r\nimport { GiSnowing } from \"react-icons/gi\";\r\nimport { RiSunFoggyFill } from \"react-icons/ri\";\r\nimport { AiOutlineCloud } from \"react-icons/ai\";\r\nimport { WiNightSnowThunderstorm } from \"react-icons/wi\";\r\nimport { GiTornado } from \"react-icons/gi\";\r\nimport { WiSandstorm } from \"react-icons/wi\";\r\nimport { GiSmokingVolcano } from \"react-icons/gi\";\r\nimport { GiDustCloud } from \"react-icons/gi\";\r\n\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst WeatherIcon = ({type}) => {\r\n\r\n    const styles = { size: \"3em\" }\r\n    let iconType = \"\";\r\n   \r\n    switch(type){\r\n       case \"Rain\": case \"Drizzle\": \r\n           iconType = <WiRain />\r\n           break;\r\n       case \"Clear\":\r\n           iconType = <FiSun />\r\n           break;\r\n       case \"Snow\":\r\n           iconType = <GiSnowing />\r\n           break;    \r\n       case \"Mist\": case \"Smoke\": case \"Haze\": case \"Fog\": case \"haze\":\r\n           iconType = <RiSunFoggyFill />\r\n           break;    \r\n       case \"Clouds\":\r\n           iconType = <AiOutlineCloud />\r\n           break; \r\n       case \"Thunderstorm\":\r\n           iconType = <WiNightSnowThunderstorm />\r\n           break; \r\n       case \"Tornado\":\r\n           iconType = <GiTornado />\r\n           break;\r\n       case \"Squall\":\r\n            iconType = <WiSandstorm />\r\n            break;      \r\n       case \"Ash\":\r\n            iconType = <GiSmokingVolcano />\r\n            break;  \r\n       case \"Dust\": case \"Sand\":\r\n            iconType = <GiDustCloud />\r\n            break;                                  \r\n       default:\r\n           iconType = <FiSun />\r\n           break;    \r\n    }\r\n\r\n   return(\r\n       <IconContext.Provider value={styles}>\r\n          {iconType}\r\n       </IconContext.Provider>\r\n   )\r\n}\r\n\r\nexport default WeatherIcon;","import { BsDropletFill } from \"react-icons/bs\";\r\nimport WeatherIcon from \"../../Assets/Icons/WeatherIcon\";\r\n\r\n\r\n\r\nconst Day = ({temp}) => {\r\n\r\n    \r\n const days = ['Mon','Tue','Wed','Thu','Fri','Sat', 'Sun'];\r\n const dt = temp.dt\r\n const date = new Date(dt*1000);\r\n\r\n    return(\r\n        <ul>\r\n        <li>{days[date.getDay()]}</li>\r\n        <li>{Math.round(temp.temp.min)}°/{Math.round(temp.temp.max)}°</li>\r\n        <li id='weather-type'> \r\n           <WeatherIcon type={temp.weather[0].main} />\r\n           <span> {temp.weather[0].description} </span>\r\n        </li>\r\n        <li><BsDropletFill />{Math.round(temp.rain)}%</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default Day;","\r\nexport const WeatherObject = {\r\n\r\n Sun :  {\r\n    data: [\r\n        <svg width=\"141\" height=\"141\" viewBox=\"0 0 141 141\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g filter=\"url(#filter0_d)\">\r\n<circle cx=\"66.5\" cy=\"66.5\" r=\"51.5\" fill=\"url(#paint0_linear)\"/>\r\n</g>\r\n<defs>\r\n<filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"141\" height=\"141\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n<feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\r\n<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\r\n<feMorphology radius=\"9\" operator=\"dilate\" in=\"SourceAlpha\" result=\"effect1_dropShadow\"/>\r\n<feOffset dx=\"4\" dy=\"4\"/>\r\n<feGaussianBlur stdDeviation=\"5\"/>\r\n<feComposite in2=\"hardAlpha\" operator=\"out\"/>\r\n<feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.72549 0 0 0 0 0.00784314 0 0 0 0.22 0\"/>\r\n<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\r\n<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\r\n</filter>\r\n<linearGradient id=\"paint0_linear\" x1=\"105.5\" y1=\"67\" x2=\"-4.5\" y2=\"59.5\" gradientUnits=\"userSpaceOnUse\">\r\n<stop stop-color=\"#FFB800\"/>\r\n<stop offset=\"1\" stop-color=\"#FFF7CF\"/>\r\n</linearGradient>\r\n</defs>\r\n</svg>\r\n    ]   \r\n},\r\n Moon :  {\r\n    data: [\r\n        <svg width=\"152\" height=\"152\" viewBox=\"0 0 152 152\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g filter=\"url(#filter0_d)\">\r\n<circle cx=\"71\" cy=\"72\" r=\"52\" fill=\"#E6E6E6\"/>\r\n</g>\r\n<path d=\"M65.3361 45.3771C68.6633 45.3771 71.3606 42.6798 71.3606 39.3525C71.3606 36.0252 68.6633 33.3279 65.3361 33.3279C62.0088 33.3279 59.3115 36.0252 59.3115 39.3525C59.3115 42.6798 62.0088 45.3771 65.3361 45.3771Z\" fill=\"#CBCBCB\"/>\r\n<path d=\"M75.6639 105.623C78.9912 105.623 81.6885 102.926 81.6885 99.5984C81.6885 96.2711 78.9912 93.5739 75.6639 93.5739C72.3366 93.5739 69.6393 96.2711 69.6393 99.5984C69.6393 102.926 72.3366 105.623 75.6639 105.623Z\" fill=\"#CBCBCB\"/>\r\n<path d=\"M98.9015 70.3362C101.278 70.3362 103.205 68.4095 103.205 66.0329C103.205 63.6563 101.278 61.7296 98.9015 61.7296C96.5249 61.7296 94.5982 63.6563 94.5982 66.0329C94.5982 68.4095 96.5249 70.3362 98.9015 70.3362Z\" fill=\"#CBCBCB\"/>\r\n<path d=\"M49.8442 93.5738C57.4495 93.5738 63.6147 87.4086 63.6147 79.8033C63.6147 72.1981 57.4495 66.0328 49.8442 66.0328C42.239 66.0328 36.0738 72.1981 36.0738 79.8033C36.0738 87.4086 42.239 93.5738 49.8442 93.5738Z\" fill=\"#CBCBCB\"/>\r\n<defs>\r\n<filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"152\" height=\"152\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n<feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\r\n<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\r\n<feMorphology radius=\"7\" operator=\"dilate\" in=\"SourceAlpha\" result=\"effect1_dropShadow\"/>\r\n<feOffset dx=\"5\" dy=\"4\"/>\r\n<feGaussianBlur stdDeviation=\"8.5\"/>\r\n<feComposite in2=\"hardAlpha\" operator=\"out\"/>\r\n<feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"/>\r\n<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\r\n<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\r\n</filter>\r\n</defs>\r\n</svg>\r\n\r\n    ]    \r\n},\r\n\r\n Cloud: {\r\n    data: [\r\n        <svg width=\"137\" height=\"102\" viewBox=\"0 0 137 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M112.936 86H31.27C22.9284 85.8583 14.9761 82.4306 9.12696 76.4556C3.2778 70.4805 0 62.4365 0 54.0571C0 45.6777 3.2778 37.6338 9.12696 31.6587C14.9761 25.6837 22.9284 22.256 31.27 22.1143H37.5157C40.6138 15.5244 45.5064 9.95014 51.6273 6.0366C57.7482 2.12306 64.8472 0.0301586 72.103 0C81.969 0.0908052 91.4304 3.95181 98.5636 10.7981C105.697 17.6445 109.966 26.9622 110.504 36.8571H112.936C119.354 36.9635 125.474 39.599 129.976 44.1954C134.477 48.7919 137 54.9811 137 61.4286C137 67.876 134.477 74.0652 129.976 78.6617C125.474 83.2582 119.354 85.8937 112.936 86ZM31.27 27.0286C24.2263 27.1704 17.5187 30.0803 12.5872 35.1337C7.65568 40.1871 4.89344 46.9811 4.89344 54.0571C4.89344 61.1332 7.65568 67.9271 12.5872 72.9805C17.5187 78.0339 24.2263 80.9439 31.27 81.0857H112.936C118.057 80.9794 122.932 78.8616 126.516 75.1868C130.1 71.5119 132.107 66.5727 132.107 61.4286C132.107 56.2845 130.1 51.3452 126.516 47.6704C122.932 43.9955 118.057 41.8778 112.936 41.7714H108.132C107.483 41.7714 106.861 41.5125 106.402 41.0517C105.943 40.5909 105.686 39.966 105.686 39.3143C105.763 30.283 102.271 21.5895 95.9755 15.1407C89.6799 8.69182 81.0947 5.01412 72.103 4.91429C65.5277 4.94929 59.1074 6.9226 53.6387 10.5894C48.1699 14.2562 43.8935 19.455 41.34 25.5408C41.1511 25.9824 40.8375 26.3587 40.4379 26.6231C40.0383 26.8875 39.5704 27.0285 39.0919 27.0286H31.27Z\" fill=\"white\"/>\r\n<circle cx=\"78\" cy=\"34\" r=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"36\" cy=\"55\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"70\" cy=\"34\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n<ellipse cx=\"42\" cy=\"56\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n<circle cx=\"110.5\" cy=\"61.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"110.5\" cy=\"61.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n<path d=\"M110.54 102H57.3619C51.9301 101.908 46.7519 99.6757 42.9431 95.785C39.1344 91.8943 37 86.6564 37 81.2C37 75.7437 39.1344 70.5057 42.9431 66.615C46.7519 62.7243 51.9301 60.4923 57.3619 60.4H61.4288C63.4462 56.1089 66.6321 52.4792 70.6178 49.9308C74.6035 47.3825 79.2261 46.0196 83.9508 46C90.3752 46.0591 96.5361 48.5733 101.181 53.0313C105.826 57.4894 108.606 63.5568 108.956 70H110.54C114.719 70.0692 118.704 71.7854 121.635 74.7784C124.567 77.7715 126.209 81.8017 126.209 86C126.209 90.1983 124.567 94.2285 121.635 97.2216C118.704 100.215 114.719 101.931 110.54 102V102ZM57.3619 63.6C52.7753 63.6923 48.4075 65.5872 45.1963 68.8778C41.9851 72.1684 40.1864 76.5924 40.1864 81.2C40.1864 85.8076 41.9851 90.2316 45.1963 93.5222C48.4075 96.8128 52.7753 98.7077 57.3619 98.8H110.54C113.874 98.7308 117.049 97.3518 119.382 94.9588C121.716 92.5659 123.023 89.3497 123.023 86C123.023 82.6503 121.716 79.4341 119.382 77.0412C117.049 74.6482 113.874 73.2692 110.54 73.2H107.412C106.989 73.2 106.584 73.0314 106.285 72.7313C105.986 72.4313 105.819 72.0243 105.819 71.6C105.869 65.7191 103.595 60.0583 99.4957 55.859C95.3962 51.6598 89.8058 49.265 83.9508 49.2C79.6692 49.2228 75.4886 50.5077 71.9275 52.8954C68.3665 55.2831 65.5818 58.6684 63.9191 62.6313C63.7961 62.9188 63.5918 63.1638 63.3316 63.336C63.0715 63.5082 62.7668 63.6 62.4552 63.6H57.3619Z\" fill=\"white\"/>\r\n<circle cx=\"87.7907\" cy=\"68.1395\" r=\"19.5349\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"60.4419\" cy=\"81.8139\" rx=\"21.4884\" ry=\"19.5349\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"82.5814\" cy=\"68.1395\" rx=\"20.186\" ry=\"19.5349\" fill=\"white\"/>\r\n<ellipse cx=\"64.3488\" cy=\"82.4651\" rx=\"21.4884\" ry=\"19.5349\" fill=\"white\"/>\r\n<circle cx=\"108.953\" cy=\"86.0465\" r=\"14.6512\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"89.093\" cy=\"86.0465\" rx=\"26.6977\" ry=\"14.6512\" fill=\"white\"/>\r\n<ellipse cx=\"89.093\" cy=\"86.0465\" rx=\"26.6977\" ry=\"14.6512\" fill=\"white\"/>\r\n<ellipse cx=\"108.953\" cy=\"86.0465\" rx=\"15.3023\" ry=\"14.6512\" fill=\"white\"/>\r\n</svg>\r\n\r\n        \r\n    ]     \r\n    \r\n},\r\n\r\nCloudSun: {\r\n    data: [\r\n        <svg width=\"162\" height=\"96\" viewBox=\"0 0 162 96\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g filter=\"url(#filter0_d)\">\r\n<circle cx=\"118\" cy=\"36\" r=\"21\" fill=\"url(#paint0_linear)\"/>\r\n</g>\r\n<path d=\"M112.936 96H31.27C22.9284 95.8583 14.9761 92.4306 9.12696 86.4556C3.2778 80.4805 0 72.4365 0 64.0571C0 55.6777 3.2778 47.6338 9.12696 41.6587C14.9761 35.6837 22.9284 32.256 31.27 32.1143H37.5157C40.6138 25.5244 45.5064 19.9501 51.6273 16.0366C57.7482 12.1231 64.8472 10.0302 72.103 10C81.969 10.0908 91.4304 13.9518 98.5636 20.7981C105.697 27.6445 109.966 36.9622 110.504 46.8571H112.936C119.354 46.9635 125.474 49.599 129.976 54.1954C134.477 58.7919 137 64.9811 137 71.4286C137 77.876 134.477 84.0652 129.976 88.6617C125.474 93.2582 119.354 95.8937 112.936 96ZM31.27 37.0286C24.2263 37.1704 17.5187 40.0803 12.5872 45.1337C7.65568 50.1871 4.89344 56.9811 4.89344 64.0571C4.89344 71.1332 7.65568 77.9271 12.5872 82.9805C17.5187 88.0339 24.2263 90.9439 31.27 91.0857H112.936C118.057 90.9794 122.932 88.8616 126.516 85.1868C130.1 81.5119 132.107 76.5727 132.107 71.4286C132.107 66.2845 130.1 61.3452 126.516 57.6704C122.932 53.9955 118.057 51.8778 112.936 51.7714H108.132C107.483 51.7714 106.861 51.5125 106.402 51.0517C105.943 50.5909 105.686 49.966 105.686 49.3143C105.763 40.283 102.271 31.5895 95.9755 25.1407C89.6799 18.6918 81.0947 15.0141 72.103 14.9143C65.5277 14.9493 59.1074 16.9226 53.6387 20.5894C48.1699 24.2562 43.8935 29.455 41.34 35.5408C41.1511 35.9824 40.8375 36.3587 40.4379 36.6231C40.0383 36.8875 39.5704 37.0285 39.0919 37.0286H31.27Z\" fill=\"white\"/>\r\n<circle cx=\"78\" cy=\"44\" r=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"36\" cy=\"65\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"70\" cy=\"44\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n<ellipse cx=\"42\" cy=\"66\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n<circle cx=\"110.5\" cy=\"71.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"80\" cy=\"71.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"80\" cy=\"71.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"110.5\" cy=\"71.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n<defs>\r\n<filter id=\"filter0_d\" x=\"82\" y=\"0\" width=\"80\" height=\"80\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n<feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\r\n<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\r\n<feMorphology radius=\"9\" operator=\"dilate\" in=\"SourceAlpha\" result=\"effect1_dropShadow\"/>\r\n<feOffset dx=\"4\" dy=\"4\"/>\r\n<feGaussianBlur stdDeviation=\"5\"/>\r\n<feComposite in2=\"hardAlpha\" operator=\"out\"/>\r\n<feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.72549 0 0 0 0 0.00784314 0 0 0 0.22 0\"/>\r\n<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\r\n<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\r\n</filter>\r\n<linearGradient id=\"paint0_linear\" x1=\"133.903\" y1=\"36.2039\" x2=\"89.0485\" y2=\"33.1456\" gradientUnits=\"userSpaceOnUse\">\r\n<stop stop-color=\"#FFB800\"/>\r\n<stop offset=\"1\" stop-color=\"#FFF7CF\"/>\r\n</linearGradient>\r\n</defs>\r\n</svg>\r\n\r\n    ]\r\n},\r\nRainCloud: {\r\n    data: [\r\n        <svg width=\"137\" height=\"156\" viewBox=\"0 0 137 156\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M23.9609 106.249C23.7061 106.176 23.4908 106.004 23.3625 105.772C23.2342 105.54 23.2034 105.267 23.2768 105.012L26.4596 93.9609C26.533 93.7061 26.7046 93.4908 26.9367 93.3625C27.1689 93.2342 27.4424 93.2034 27.6973 93.2768C27.9521 93.3502 28.1674 93.5218 28.2957 93.7539C28.424 93.986 28.4548 94.2596 28.3814 94.5145L25.1986 105.565C25.1252 105.82 24.9536 106.035 24.7215 106.164C24.4894 106.292 24.2158 106.323 23.9609 106.249Z\" fill=\"white\"/>\r\n<path d=\"M89.9609 101.249C89.7061 101.176 89.4908 101.004 89.3625 100.772C89.2342 100.54 89.2034 100.267 89.2768 100.012L92.4596 88.9609C92.533 88.7061 92.7046 88.4908 92.9367 88.3625C93.1689 88.2342 93.4424 88.2034 93.6973 88.2768C93.9521 88.3502 94.1674 88.5218 94.2957 88.7539C94.424 88.986 94.4548 89.2596 94.3814 89.5145L91.1986 100.565C91.1252 100.82 90.9536 101.035 90.7215 101.164C90.4894 101.292 90.2158 101.323 89.9609 101.249Z\" fill=\"white\"/>\r\n<path d=\"M70.9609 136.249C70.7061 136.176 70.4908 136.004 70.3625 135.772C70.2342 135.54 70.2034 135.267 70.2768 135.012L73.4596 123.961C73.533 123.706 73.7046 123.491 73.9367 123.363C74.1689 123.234 74.4424 123.203 74.6973 123.277C74.9521 123.35 75.1674 123.522 75.2957 123.754C75.424 123.986 75.4548 124.26 75.3814 124.514L72.1986 135.565C72.1252 135.82 71.9536 136.035 71.7215 136.164C71.4894 136.292 71.2158 136.323 70.9609 136.249Z\" fill=\"white\"/>\r\n<path d=\"M39.9609 104.249C39.7061 104.176 39.4908 104.004 39.3625 103.772C39.2342 103.54 39.2034 103.267 39.2768 103.012L42.4596 91.9609C42.533 91.7061 42.7046 91.4908 42.9367 91.3625C43.1689 91.2342 43.4424 91.2034 43.6973 91.2768C43.9521 91.3502 44.1674 91.5218 44.2957 91.7539C44.424 91.986 44.4548 92.2596 44.3814 92.5145L41.1986 103.565C41.1252 103.82 40.9536 104.035 40.7215 104.164C40.4894 104.292 40.2158 104.323 39.9609 104.249Z\" fill=\"white\"/>\r\n<path d=\"M64.9609 108.249C64.7061 108.176 64.4908 108.004 64.3625 107.772C64.2342 107.54 64.2034 107.267 64.2768 107.012L67.4596 95.9609C67.533 95.7061 67.7046 95.4908 67.9367 95.3625C68.1689 95.2342 68.4424 95.2034 68.6973 95.2768C68.9521 95.3502 69.1674 95.5218 69.2957 95.7539C69.424 95.986 69.4548 96.2596 69.3814 96.5145L66.1986 107.565C66.1252 107.82 65.9536 108.035 65.7215 108.164C65.4894 108.292 65.2158 108.323 64.9609 108.249Z\" fill=\"white\"/>\r\n<path d=\"M86.9609 127.249C86.7061 127.176 86.4908 127.004 86.3625 126.772C86.2342 126.54 86.2034 126.267 86.2768 126.012L89.4596 114.961C89.533 114.706 89.7046 114.491 89.9367 114.363C90.1689 114.234 90.4424 114.203 90.6973 114.277C90.9521 114.35 91.1674 114.522 91.2957 114.754C91.424 114.986 91.4548 115.26 91.3814 115.514L88.1986 126.565C88.1252 126.82 87.9536 127.035 87.7215 127.164C87.4894 127.292 87.2158 127.323 86.9609 127.249Z\" fill=\"white\"/>\r\n<path d=\"M75.9609 152.249C75.7061 152.176 75.4908 152.004 75.3625 151.772C75.2342 151.54 75.2034 151.267 75.2768 151.012L78.4596 139.961C78.533 139.706 78.7046 139.491 78.9367 139.363C79.1689 139.234 79.4424 139.203 79.6973 139.277C79.9521 139.35 80.1674 139.522 80.2957 139.754C80.424 139.986 80.4548 140.26 80.3814 140.514L77.1986 151.565C77.1252 151.82 76.9536 152.035 76.7215 152.164C76.4894 152.292 76.2158 152.323 75.9609 152.249Z\" fill=\"white\"/>\r\n<path d=\"M54.9609 155.249C54.7061 155.176 54.4908 155.004 54.3625 154.772C54.2342 154.54 54.2034 154.267 54.2768 154.012L57.4596 142.961C57.533 142.706 57.7046 142.491 57.9367 142.363C58.1689 142.234 58.4424 142.203 58.6973 142.277C58.9521 142.35 59.1674 142.522 59.2957 142.754C59.424 142.986 59.4548 143.26 59.3814 143.514L56.1986 154.565C56.1252 154.82 55.9536 155.035 55.7215 155.164C55.4894 155.292 55.2158 155.323 54.9609 155.249Z\" fill=\"white\"/>\r\n<path d=\"M30.9609 130.249C30.7061 130.176 30.4908 130.004 30.3625 129.772C30.2342 129.54 30.2034 129.267 30.2768 129.012L33.4596 117.961C33.533 117.706 33.7046 117.491 33.9367 117.363C34.1689 117.234 34.4424 117.203 34.6973 117.277C34.9521 117.35 35.1674 117.522 35.2957 117.754C35.424 117.986 35.4548 118.26 35.3814 118.514L32.1986 129.565C32.1252 129.82 31.9536 130.035 31.7215 130.164C31.4894 130.292 31.2158 130.323 30.9609 130.249Z\" fill=\"white\"/>\r\n<path d=\"M96.9609 125.249C96.7061 125.176 96.4908 125.004 96.3625 124.772C96.2342 124.54 96.2034 124.267 96.2768 124.012L99.4596 112.961C99.533 112.706 99.7046 112.491 99.9367 112.363C100.169 112.234 100.442 112.203 100.697 112.277C100.952 112.35 101.167 112.522 101.296 112.754C101.424 112.986 101.455 113.26 101.381 113.514L98.1986 124.565C98.1252 124.82 97.9536 125.035 97.7215 125.164C97.4894 125.292 97.2158 125.323 96.9609 125.249Z\" fill=\"white\"/>\r\n<path d=\"M46.9609 129.249C46.7061 129.176 46.4908 129.004 46.3625 128.772C46.2342 128.54 46.2034 128.267 46.2768 128.012L49.4596 116.961C49.533 116.706 49.7046 116.491 49.9367 116.363C50.1689 116.234 50.4424 116.203 50.6973 116.277C50.9521 116.35 51.1674 116.522 51.2957 116.754C51.424 116.986 51.4548 117.26 51.3814 117.514L48.1986 128.565C48.1252 128.82 47.9536 129.035 47.7215 129.164C47.4894 129.292 47.2158 129.323 46.9609 129.249Z\" fill=\"white\"/>\r\n<path d=\"M112.936 86H31.27C22.9284 85.8583 14.9761 82.4306 9.12696 76.4556C3.2778 70.4805 0 62.4365 0 54.0571C0 45.6777 3.2778 37.6338 9.12696 31.6587C14.9761 25.6837 22.9284 22.256 31.27 22.1143H37.5157C40.6138 15.5244 45.5064 9.95014 51.6273 6.0366C57.7482 2.12306 64.8472 0.0301586 72.103 0C81.969 0.0908052 91.4304 3.95181 98.5636 10.7981C105.697 17.6445 109.966 26.9622 110.504 36.8571H112.936C119.354 36.9635 125.474 39.599 129.976 44.1954C134.477 48.7919 137 54.9811 137 61.4286C137 67.876 134.477 74.0652 129.976 78.6617C125.474 83.2582 119.354 85.8937 112.936 86ZM31.27 27.0286C24.2263 27.1704 17.5187 30.0803 12.5872 35.1337C7.65568 40.1871 4.89344 46.9811 4.89344 54.0571C4.89344 61.1332 7.65568 67.9271 12.5872 72.9805C17.5187 78.0339 24.2263 80.9439 31.27 81.0857H112.936C118.057 80.9794 122.932 78.8616 126.516 75.1868C130.1 71.5119 132.107 66.5727 132.107 61.4286C132.107 56.2845 130.1 51.3452 126.516 47.6704C122.932 43.9955 118.057 41.8778 112.936 41.7714H108.132C107.483 41.7714 106.861 41.5125 106.402 41.0517C105.943 40.5909 105.686 39.966 105.686 39.3143C105.763 30.283 102.271 21.5895 95.9755 15.1407C89.6799 8.69182 81.0947 5.01412 72.103 4.91429C65.5277 4.94929 59.1074 6.9226 53.6387 10.5894C48.1699 14.2562 43.8935 19.455 41.34 25.5408C41.1511 25.9824 40.8375 26.3587 40.4379 26.6231C40.0383 26.8875 39.5704 27.0285 39.0919 27.0286H31.27Z\" fill=\"white\"/>\r\n<circle cx=\"78\" cy=\"34\" r=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"36\" cy=\"55\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"70\" cy=\"34\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n<ellipse cx=\"42\" cy=\"56\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n<circle cx=\"110.5\" cy=\"61.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"110.5\" cy=\"61.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n</svg>\r\n    ]\r\n},\r\nSnowCloud: {\r\n    data: [\r\n        <svg width=\"137\" height=\"135\" viewBox=\"0 0 137 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M43.5 99C45.433 99 47 97.433 47 95.5C47 93.567 45.433 92 43.5 92C41.567 92 40 93.567 40 95.5C40 97.433 41.567 99 43.5 99Z\" fill=\"white\"/>\r\n<path d=\"M80.5 99C82.433 99 84 97.433 84 95.5C84 93.567 82.433 92 80.5 92C78.567 92 77 93.567 77 95.5C77 97.433 78.567 99 80.5 99Z\" fill=\"white\"/>\r\n<path d=\"M55 106C56.6569 106 58 104.209 58 102C58 99.7909 56.6569 98 55 98C53.3431 98 52 99.7909 52 102C52 104.209 53.3431 106 55 106Z\" fill=\"white\"/>\r\n<path d=\"M92 106C93.6569 106 95 104.209 95 102C95 99.7909 93.6569 98 92 98C90.3431 98 89 99.7909 89 102C89 104.209 90.3431 106 92 106Z\" fill=\"white\"/>\r\n<path d=\"M36 112C38.2091 112 40 110.209 40 108C40 105.791 38.2091 104 36 104C33.7909 104 32 105.791 32 108C32 110.209 33.7909 112 36 112Z\" fill=\"white\"/>\r\n<path d=\"M73 112C75.2091 112 77 110.209 77 108C77 105.791 75.2091 104 73 104C70.7909 104 69 105.791 69 108C69 110.209 70.7909 112 73 112Z\" fill=\"white\"/>\r\n<path d=\"M61 126C63.2091 126 65 124.209 65 122C65 119.791 63.2091 118 61 118C58.7909 118 57 119.791 57 122C57 124.209 58.7909 126 61 126Z\" fill=\"white\"/>\r\n<path d=\"M48 121C50.2091 121 52 119.209 52 117C52 114.791 50.2091 113 48 113C45.7909 113 44 114.791 44 117C44 119.209 45.7909 121 48 121Z\" fill=\"white\"/>\r\n<path d=\"M36 135C38.2091 135 40 133.209 40 131C40 128.791 38.2091 127 36 127C33.7909 127 32 128.791 32 131C32 133.209 33.7909 135 36 135Z\" fill=\"white\"/>\r\n<path d=\"M85 121C87.2091 121 89 119.209 89 117C89 114.791 87.2091 113 85 113C82.7909 113 81 114.791 81 117C81 119.209 82.7909 121 85 121Z\" fill=\"white\"/>\r\n<path d=\"M112.936 86H31.27C22.9284 85.8583 14.9761 82.4306 9.12696 76.4556C3.2778 70.4805 0 62.4365 0 54.0571C0 45.6777 3.2778 37.6338 9.12696 31.6587C14.9761 25.6837 22.9284 22.256 31.27 22.1143H37.5157C40.6138 15.5244 45.5064 9.95014 51.6273 6.0366C57.7482 2.12306 64.8472 0.0301586 72.103 0C81.969 0.0908052 91.4304 3.95181 98.5636 10.7981C105.697 17.6445 109.966 26.9622 110.504 36.8571H112.936C119.354 36.9635 125.474 39.599 129.976 44.1954C134.477 48.7919 137 54.9811 137 61.4286C137 67.876 134.477 74.0652 129.976 78.6617C125.474 83.2582 119.354 85.8937 112.936 86ZM31.27 27.0286C24.2263 27.1704 17.5187 30.0803 12.5872 35.1337C7.65568 40.1871 4.89344 46.9811 4.89344 54.0571C4.89344 61.1332 7.65568 67.9271 12.5872 72.9805C17.5187 78.0339 24.2263 80.9439 31.27 81.0857H112.936C118.057 80.9794 122.932 78.8616 126.516 75.1868C130.1 71.5119 132.107 66.5727 132.107 61.4286C132.107 56.2845 130.1 51.3452 126.516 47.6704C122.932 43.9955 118.057 41.8778 112.936 41.7714H108.132C107.483 41.7714 106.861 41.5125 106.402 41.0517C105.943 40.5909 105.686 39.966 105.686 39.3143C105.763 30.283 102.271 21.5895 95.9755 15.1407C89.6799 8.69182 81.0947 5.01412 72.103 4.91429C65.5277 4.94929 59.1074 6.9226 53.6387 10.5894C48.1699 14.2562 43.8935 19.455 41.34 25.5408C41.1511 25.9824 40.8375 26.3587 40.4379 26.6231C40.0383 26.8875 39.5704 27.0285 39.0919 27.0286H31.27Z\" fill=\"white\"/>\r\n<circle cx=\"78\" cy=\"34\" r=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"36\" cy=\"55\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"70\" cy=\"34\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n<ellipse cx=\"42\" cy=\"56\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n<circle cx=\"110.5\" cy=\"61.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"110.5\" cy=\"61.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n</svg>\r\n    ]\r\n},\r\nWind : {\r\n    data: [\r\n        <svg width=\"175\" height=\"132\" viewBox=\"0 0 175 132\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"4.5\" y1=\"68.2916\" x2=\"142.637\" y2=\"68.2916\" stroke=\"white\" stroke-width=\"9\" stroke-linecap=\"round\"/>\r\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M166 36.5253C166 50.3184 155.855 61.7418 142.619 63.7407L142.619 72.8181C160.84 70.7601 175 55.2963 175 36.5253C175 16.3529 158.647 0 138.475 0C118.302 0 101.949 16.3529 101.949 36.5253C101.949 38.7354 102.146 40.8996 102.522 43.0014H111.716C111.215 40.9246 110.949 38.7559 110.949 36.5253C110.949 21.3235 123.273 9 138.475 9C153.676 9 166 21.3235 166 36.5253Z\" fill=\"white\"/>\r\n        <line x1=\"4.5\" y1=\"-4.5\" x2=\"98.2878\" y2=\"-4.5\" transform=\"matrix(1 0 0 -1 32.3806 89.1266)\" stroke=\"white\" stroke-width=\"9\" stroke-linecap=\"round\"/>\r\n        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M144.427 110.027C144.427 105.392 139.744 99.2566 130.806 98.1516V89.5745L130.806 89.1114C143.535 90.2974 153.427 99.2092 153.427 110.027C153.427 121.652 142.003 131.077 127.911 131.077C113.819 131.077 102.395 121.652 102.395 110.027C102.395 108.753 102.532 107.506 102.795 106.295H112.302C111.7 107.564 111.395 108.844 111.395 110.027C111.395 115.139 117.092 122.077 127.911 122.077C138.73 122.077 144.427 115.139 144.427 110.027Z\" fill=\"white\"/>\r\n        <line x1=\"12.7112\" y1=\"40.0195\" x2=\"87.3104\" y2=\"40.0195\" stroke=\"white\" stroke-width=\"7\" stroke-linecap=\"round\"/>\r\n        </svg>\r\n           \r\n    ]\r\n},\r\nCloudMoon: {\r\n    data: [\r\n        <svg width=\"162\" height=\"112\" viewBox=\"0 0 162 112\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <g filter=\"url(#filter0_d)\">\r\n        <circle cx=\"109.5\" cy=\"43.5\" r=\"23.5\" fill=\"#E6E6E6\"/>\r\n        </g>\r\n        <path d=\"M106.94 31.4685C108.444 31.4685 109.663 30.2495 109.663 28.7458C109.663 27.2422 108.444 26.0232 106.94 26.0232C105.437 26.0232 104.218 27.2422 104.218 28.7458C104.218 30.2495 105.437 31.4685 106.94 31.4685Z\" fill=\"#CBCBCB\"/>\r\n        <path d=\"M111.608 58.6951C113.111 58.6951 114.33 57.4761 114.33 55.9724C114.33 54.4687 113.111 53.2498 111.608 53.2498C110.104 53.2498 108.885 54.4687 108.885 55.9724C108.885 57.4761 110.104 58.6951 111.608 58.6951Z\" fill=\"#CBCBCB\"/>\r\n        <path d=\"M122.109 42.748C123.183 42.748 124.054 41.8773 124.054 40.8033C124.054 39.7292 123.183 38.8585 122.109 38.8585C121.035 38.8585 120.165 39.7292 120.165 40.8033C120.165 41.8773 121.035 42.748 122.109 42.748Z\" fill=\"#CBCBCB\"/>\r\n        <path d=\"M99.9393 53.2498C103.376 53.2498 106.162 50.4635 106.162 47.0265C106.162 43.5896 103.376 40.8033 99.9393 40.8033C96.5023 40.8033 93.7161 43.5896 93.7161 47.0265C93.7161 50.4635 96.5023 53.2498 99.9393 53.2498Z\" fill=\"#CBCBCB\"/>\r\n        <path d=\"M112.936 112H31.27C22.9284 111.858 14.9761 108.431 9.12696 102.456C3.2778 96.4805 0 88.4365 0 80.0571C0 71.6777 3.2778 63.6338 9.12696 57.6587C14.9761 51.6837 22.9284 48.256 31.27 48.1143H37.5157C40.6138 41.5244 45.5064 35.9501 51.6273 32.0366C57.7482 28.1231 64.8472 26.0302 72.103 26C81.969 26.0908 91.4304 29.9518 98.5636 36.7981C105.697 43.6445 109.966 52.9622 110.504 62.8571H112.936C119.354 62.9635 125.474 65.599 129.976 70.1954C134.477 74.7919 137 80.9811 137 87.4286C137 93.876 134.477 100.065 129.976 104.662C125.474 109.258 119.354 111.894 112.936 112ZM31.27 53.0286C24.2263 53.1704 17.5187 56.0803 12.5872 61.1337C7.65568 66.1871 4.89344 72.9811 4.89344 80.0571C4.89344 87.1332 7.65568 93.9271 12.5872 98.9805C17.5187 104.034 24.2263 106.944 31.27 107.086H112.936C118.057 106.979 122.932 104.862 126.516 101.187C130.1 97.5119 132.107 92.5727 132.107 87.4286C132.107 82.2845 130.1 77.3452 126.516 73.6704C122.932 69.9955 118.057 67.8778 112.936 67.7714H108.132C107.483 67.7714 106.861 67.5125 106.402 67.0517C105.943 66.5909 105.686 65.966 105.686 65.3143C105.763 56.283 102.271 47.5895 95.9755 41.1407C89.6799 34.6918 81.0947 31.0141 72.103 30.9143C65.5277 30.9493 59.1074 32.9226 53.6387 36.5894C48.1699 40.2562 43.8935 45.455 41.34 51.5408C41.1511 51.9824 40.8375 52.3587 40.4379 52.6231C40.0383 52.8875 39.5704 53.0285 39.0919 53.0286H31.27Z\" fill=\"white\"/>\r\n        <circle cx=\"78\" cy=\"60\" r=\"30\" fill=\"#E1E1E1\"/>\r\n        <ellipse cx=\"36\" cy=\"81\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n        <ellipse cx=\"70\" cy=\"60\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n        <ellipse cx=\"42\" cy=\"82\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n        <circle cx=\"110.5\" cy=\"87.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n        <ellipse cx=\"80\" cy=\"87.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n        <ellipse cx=\"80\" cy=\"87.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n        <ellipse cx=\"110.5\" cy=\"87.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n        <defs>\r\n        <filter id=\"filter0_d\" x=\"67\" y=\"0\" width=\"95\" height=\"95\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\r\n        <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\r\n        <feMorphology radius=\"7\" operator=\"dilate\" in=\"SourceAlpha\" result=\"effect1_dropShadow\"/>\r\n        <feOffset dx=\"5\" dy=\"4\"/>\r\n        <feGaussianBlur stdDeviation=\"8.5\"/>\r\n        <feComposite in2=\"hardAlpha\" operator=\"out\"/>\r\n        <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"/>\r\n        <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\r\n        <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\r\n        </filter>\r\n        </defs>\r\n        </svg>\r\n        \r\n    ]\r\n},\r\nThunderstorm: {\r\n    data: [\r\n            <svg width=\"137\" height=\"156\" viewBox=\"0 0 137 156\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M54.6922 80L43.4176 113.865H55.945L43 149L77.2419 107.515H65.1319L81 80H54.6922Z\" fill=\"#F7CF52\"/>\r\n<path d=\"M23.9609 106.249C23.7061 106.176 23.4908 106.004 23.3625 105.772C23.2342 105.54 23.2034 105.267 23.2768 105.012L26.4596 93.9609C26.533 93.7061 26.7046 93.4908 26.9367 93.3625C27.1689 93.2342 27.4424 93.2034 27.6973 93.2768C27.9521 93.3502 28.1674 93.5218 28.2957 93.7539C28.424 93.986 28.4548 94.2596 28.3814 94.5145L25.1986 105.565C25.1252 105.82 24.9536 106.035 24.7215 106.164C24.4894 106.292 24.2158 106.323 23.9609 106.249V106.249Z\" fill=\"white\"/>\r\n<path d=\"M89.9609 101.249C89.7061 101.176 89.4908 101.004 89.3625 100.772C89.2342 100.54 89.2034 100.267 89.2768 100.012L92.4596 88.9609C92.533 88.7061 92.7046 88.4908 92.9367 88.3625C93.1689 88.2342 93.4424 88.2034 93.6973 88.2768C93.9521 88.3502 94.1674 88.5218 94.2957 88.7539C94.424 88.986 94.4548 89.2596 94.3814 89.5145L91.1986 100.565C91.1252 100.82 90.9536 101.035 90.7215 101.164C90.4894 101.292 90.2158 101.323 89.9609 101.249V101.249Z\" fill=\"white\"/>\r\n<path d=\"M70.9609 136.249C70.7061 136.176 70.4908 136.004 70.3625 135.772C70.2342 135.54 70.2034 135.267 70.2768 135.012L73.4596 123.961C73.533 123.706 73.7046 123.491 73.9367 123.363C74.1689 123.234 74.4424 123.203 74.6973 123.277C74.9521 123.35 75.1674 123.522 75.2957 123.754C75.424 123.986 75.4548 124.26 75.3814 124.514L72.1986 135.565C72.1252 135.82 71.9536 136.035 71.7215 136.164C71.4894 136.292 71.2158 136.323 70.9609 136.249V136.249Z\" fill=\"white\"/>\r\n<path d=\"M39.9609 104.249C39.7061 104.176 39.4908 104.004 39.3625 103.772C39.2342 103.54 39.2034 103.267 39.2768 103.012L42.4596 91.9609C42.533 91.7061 42.7046 91.4908 42.9367 91.3625C43.1689 91.2342 43.4424 91.2034 43.6973 91.2768C43.9521 91.3502 44.1674 91.5218 44.2957 91.7539C44.424 91.986 44.4548 92.2596 44.3814 92.5145L41.1986 103.565C41.1252 103.82 40.9536 104.035 40.7215 104.164C40.4894 104.292 40.2158 104.323 39.9609 104.249V104.249Z\" fill=\"white\"/>\r\n<path d=\"M64.9609 108.249C64.7061 108.176 64.4908 108.004 64.3625 107.772C64.2342 107.54 64.2034 107.267 64.2768 107.012L67.4596 95.9609C67.533 95.7061 67.7046 95.4908 67.9367 95.3625C68.1689 95.2342 68.4424 95.2034 68.6973 95.2768C68.9521 95.3502 69.1674 95.5218 69.2957 95.7539C69.424 95.986 69.4548 96.2596 69.3814 96.5145L66.1986 107.565C66.1252 107.82 65.9536 108.035 65.7215 108.164C65.4894 108.292 65.2158 108.323 64.9609 108.249V108.249Z\" fill=\"white\"/>\r\n<path d=\"M86.9609 127.249C86.7061 127.176 86.4908 127.004 86.3625 126.772C86.2342 126.54 86.2034 126.267 86.2768 126.012L89.4596 114.961C89.533 114.706 89.7046 114.491 89.9367 114.363C90.1689 114.234 90.4424 114.203 90.6973 114.277C90.9521 114.35 91.1674 114.522 91.2957 114.754C91.424 114.986 91.4548 115.26 91.3814 115.514L88.1986 126.565C88.1252 126.82 87.9536 127.035 87.7215 127.164C87.4894 127.292 87.2158 127.323 86.9609 127.249V127.249Z\" fill=\"white\"/>\r\n<path d=\"M75.9609 152.249C75.7061 152.176 75.4908 152.004 75.3625 151.772C75.2342 151.54 75.2034 151.267 75.2768 151.012L78.4596 139.961C78.533 139.706 78.7046 139.491 78.9367 139.363C79.1689 139.234 79.4424 139.203 79.6973 139.277C79.9521 139.35 80.1674 139.522 80.2957 139.754C80.424 139.986 80.4548 140.26 80.3814 140.514L77.1986 151.565C77.1252 151.82 76.9536 152.035 76.7215 152.164C76.4894 152.292 76.2158 152.323 75.9609 152.249Z\" fill=\"white\"/>\r\n<path d=\"M54.9609 155.249C54.7061 155.176 54.4908 155.004 54.3625 154.772C54.2342 154.54 54.2034 154.267 54.2768 154.012L57.4596 142.961C57.533 142.706 57.7046 142.491 57.9367 142.363C58.1689 142.234 58.4424 142.203 58.6973 142.277C58.9521 142.35 59.1674 142.522 59.2957 142.754C59.424 142.986 59.4548 143.26 59.3814 143.514L56.1986 154.565C56.1252 154.82 55.9536 155.035 55.7215 155.164C55.4894 155.292 55.2158 155.323 54.9609 155.249V155.249Z\" fill=\"white\"/>\r\n<path d=\"M30.9609 130.249C30.7061 130.176 30.4908 130.004 30.3625 129.772C30.2342 129.54 30.2034 129.267 30.2768 129.012L33.4596 117.961C33.533 117.706 33.7046 117.491 33.9367 117.363C34.1689 117.234 34.4424 117.203 34.6973 117.277C34.9521 117.35 35.1674 117.522 35.2957 117.754C35.424 117.986 35.4548 118.26 35.3814 118.514L32.1986 129.565C32.1252 129.82 31.9536 130.035 31.7215 130.164C31.4894 130.292 31.2158 130.323 30.9609 130.249V130.249Z\" fill=\"white\"/>\r\n<path d=\"M96.9609 125.249C96.7061 125.176 96.4908 125.004 96.3625 124.772C96.2342 124.54 96.2034 124.267 96.2768 124.012L99.4596 112.961C99.533 112.706 99.7046 112.491 99.9367 112.363C100.169 112.234 100.442 112.203 100.697 112.277C100.952 112.35 101.167 112.522 101.296 112.754C101.424 112.986 101.455 113.26 101.381 113.514L98.1986 124.565C98.1252 124.82 97.9536 125.035 97.7215 125.164C97.4894 125.292 97.2158 125.323 96.9609 125.249V125.249Z\" fill=\"white\"/>\r\n<path d=\"M46.9609 129.249C46.7061 129.176 46.4908 129.004 46.3625 128.772C46.2342 128.54 46.2034 128.267 46.2768 128.012L49.4596 116.961C49.533 116.706 49.7046 116.491 49.9367 116.363C50.1689 116.234 50.4424 116.203 50.6973 116.277C50.9521 116.35 51.1674 116.522 51.2957 116.754C51.424 116.986 51.4548 117.26 51.3814 117.514L48.1986 128.565C48.1252 128.82 47.9536 129.035 47.7215 129.164C47.4894 129.292 47.2158 129.323 46.9609 129.249V129.249Z\" fill=\"white\"/>\r\n<path d=\"M112.936 86H31.27C22.9284 85.8583 14.9761 82.4306 9.12696 76.4555C3.2778 70.4805 0 62.4365 0 54.0571C0 45.6777 3.2778 37.6338 9.12696 31.6587C14.9761 25.6837 22.9284 22.256 31.27 22.1143H37.5157C40.6138 15.5244 45.5064 9.95014 51.6273 6.0366C57.7482 2.12306 64.8472 0.0301586 72.103 0C81.969 0.0908051 91.4304 3.95181 98.5636 10.7981C105.697 17.6445 109.966 26.9622 110.504 36.8571H112.936C119.354 36.9635 125.474 39.599 129.976 44.1954C134.477 48.7919 137 54.9811 137 61.4286C137 67.876 134.477 74.0652 129.976 78.6617C125.474 83.2582 119.354 85.8937 112.936 86V86ZM31.27 27.0286C24.2263 27.1704 17.5187 30.0803 12.5872 35.1337C7.65568 40.1871 4.89344 46.9811 4.89344 54.0571C4.89344 61.1332 7.65568 67.9271 12.5872 72.9805C17.5187 78.0339 24.2263 80.9439 31.27 81.0857H112.936C118.057 80.9794 122.932 78.8616 126.516 75.1868C130.1 71.5119 132.107 66.5727 132.107 61.4286C132.107 56.2844 130.1 51.3452 126.516 47.6704C122.932 43.9955 118.057 41.8778 112.936 41.7714H108.132C107.483 41.7714 106.861 41.5125 106.402 41.0517C105.943 40.5909 105.686 39.966 105.686 39.3143C105.763 30.283 102.271 21.5895 95.9755 15.1407C89.6799 8.69182 81.0947 5.01412 72.103 4.91429C65.5277 4.94929 59.1074 6.9226 53.6387 10.5894C48.1699 14.2562 43.8935 19.455 41.34 25.5408C41.1511 25.9824 40.8375 26.3587 40.4379 26.6231C40.0383 26.8875 39.5704 27.0285 39.0919 27.0286H31.27Z\" fill=\"white\"/>\r\n<circle cx=\"78\" cy=\"34\" r=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"36\" cy=\"55\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"70\" cy=\"34\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n<ellipse cx=\"42\" cy=\"56\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n<circle cx=\"110.5\" cy=\"61.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"80\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n<ellipse cx=\"110.5\" cy=\"61.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n</svg>\r\n   \r\n    ]\r\n    },\r\nFog: {\r\n    data: [\r\n        <svg width=\"168\" height=\"106\" viewBox=\"0 0 168 106\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M125.936 86H44.27C35.9284 85.8583 27.9761 82.4306 22.127 76.4555C16.2778 70.4805 13 62.4365 13 54.0571C13 45.6777 16.2778 37.6338 22.127 31.6587C27.9761 25.6837 35.9284 22.256 44.27 22.1143H50.5157C53.6138 15.5244 58.5064 9.95014 64.6273 6.0366C70.7482 2.12306 77.8472 0.0301586 85.103 0C94.969 0.0908051 104.43 3.95181 111.564 10.7981C118.697 17.6445 122.966 26.9622 123.504 36.8571H125.936C132.354 36.9635 138.474 39.599 142.976 44.1954C147.477 48.7919 150 54.9811 150 61.4286C150 67.876 147.477 74.0652 142.976 78.6617C138.474 83.2582 132.354 85.8937 125.936 86V86ZM44.27 27.0286C37.2263 27.1704 30.5187 30.0803 25.5872 35.1337C20.6557 40.1871 17.8934 46.9811 17.8934 54.0571C17.8934 61.1332 20.6557 67.9271 25.5872 72.9805C30.5187 78.0339 37.2263 80.9439 44.27 81.0857H125.936C131.057 80.9794 135.932 78.8616 139.516 75.1868C143.1 71.5119 145.107 66.5727 145.107 61.4286C145.107 56.2844 143.1 51.3452 139.516 47.6704C135.932 43.9955 131.057 41.8778 125.936 41.7714H121.132C120.483 41.7714 119.861 41.5125 119.402 41.0517C118.943 40.5909 118.686 39.966 118.686 39.3143C118.763 30.283 115.271 21.5895 108.976 15.1407C102.68 8.69182 94.0947 5.01412 85.103 4.91429C78.5277 4.94929 72.1074 6.9226 66.6387 10.5894C61.1699 14.2562 56.8935 19.455 54.34 25.5408C54.1511 25.9824 53.8375 26.3587 53.4379 26.6231C53.0383 26.8875 52.5704 27.0285 52.0919 27.0286H44.27Z\" fill=\"white\"/>\r\n        <circle cx=\"91\" cy=\"34\" r=\"30\" fill=\"#E1E1E1\"/>\r\n        <ellipse cx=\"49\" cy=\"55\" rx=\"33\" ry=\"30\" fill=\"#E1E1E1\"/>\r\n        <ellipse cx=\"83\" cy=\"34\" rx=\"31\" ry=\"30\" fill=\"white\"/>\r\n        <ellipse cx=\"55\" cy=\"56\" rx=\"33\" ry=\"30\" fill=\"white\"/>\r\n        <circle cx=\"123.5\" cy=\"61.5\" r=\"22.5\" fill=\"#E1E1E1\"/>\r\n        <ellipse cx=\"93\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n        <ellipse cx=\"93\" cy=\"61.5\" rx=\"41\" ry=\"22.5\" fill=\"white\"/>\r\n        <ellipse cx=\"123.5\" cy=\"61.5\" rx=\"23.5\" ry=\"22.5\" fill=\"white\"/>\r\n        <line x1=\"2\" y1=\"70\" x2=\"66\" y2=\"70\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"16\" y1=\"82\" x2=\"80\" y2=\"82\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"39\" y1=\"59\" x2=\"103\" y2=\"59\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"10\" y1=\"41\" x2=\"74\" y2=\"41\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"95\" y1=\"51\" x2=\"159\" y2=\"51\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"102\" y1=\"79\" x2=\"166\" y2=\"79\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"17\" y1=\"96\" x2=\"69\" y2=\"96\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"99\" y1=\"93\" x2=\"141\" y2=\"93\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"65\" y1=\"104\" x2=\"107\" y2=\"104\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        <line x1=\"86\" y1=\"67\" x2=\"150\" y2=\"67\" stroke=\"#E1E1E1\" stroke-width=\"4\" stroke-linecap=\"round\"/>\r\n        </svg>\r\n    ]\r\n    },\r\nTornado: {\r\n    data: [\r\n            <svg width=\"121\" height=\"108\" viewBox=\"0 0 121 108\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M83.8492 0.104006C83.8492 0.160748 84.1611 0.520118 84.5393 0.888944C85.5319 1.86302 86.1558 2.14674 88.9539 2.88439C92.3665 3.79227 96.8094 5.60803 100.231 7.49945C104.466 9.83535 107.359 12.3226 109.013 15.0462C110.573 17.6185 110.762 20.6826 109.514 23.4252C108.73 25.1369 107.822 26.3947 105.828 28.5226L104.693 29.7331L104.627 28.8819C104.41 26.338 103.606 24.0115 102.264 22.0539C101.309 20.6732 99.4941 18.9425 97.7926 17.8077C95.0228 15.9541 90.7783 14.318 86.1652 13.325C84.7472 13.0224 81.864 12.5117 81.864 12.559C81.864 12.5874 82.0342 12.8332 82.2422 13.117C83.0362 14.1667 84.6338 15.3394 88.2922 17.5429C90.9485 19.1506 92.6501 20.2949 93.7088 21.1839C96.4786 23.5009 97.3483 25.7611 96.4219 28.1632C95.5427 30.4518 92.8486 33.1282 89.6723 34.8588L89.0295 35.2087L89.1051 34.698C89.1524 34.4143 89.1902 33.5727 89.1902 32.8161C89.1808 31.2462 89.0201 30.4802 88.4245 29.2886C86.7797 26.007 82.9795 23.8602 79.3495 24.1628L78.5176 24.229L79.0376 24.7208C79.3211 24.9856 80.0963 25.6665 80.7769 26.2434C82.6959 27.8795 83.5561 29.0427 83.8965 30.4613C84.1517 31.5583 84.0288 32.4851 83.4805 33.5537C82.2327 35.9558 78.5649 38.1688 73.6304 39.4739C66.0679 41.4693 56.7187 41.6301 48.2109 39.9089C42.3689 38.7268 38.8334 36.9015 37.6612 34.4522C36.8483 32.7688 37.2358 30.7261 38.616 29.3642C39.4006 28.5888 40.3459 28.0403 42.4256 27.1797C45.1387 26.0637 45.9422 25.6098 46.7929 24.7397C47.3034 24.2101 47.3412 24.2101 45.2804 24.5979C39.0225 25.7516 34.8347 27.662 33.1899 30.1208C32.0461 31.8325 31.9988 33.6861 33.0387 35.9086C33.2655 36.3909 33.4357 36.7881 33.4262 36.7881C33.2655 36.7881 30.7415 35.8613 30.2216 35.6059C27.5653 34.3481 25.1169 32.2676 24.2756 30.5748C23.8691 29.7614 23.8691 29.7425 23.8691 28.759C23.8691 27.8038 23.888 27.7187 24.2094 27.0473C25.306 24.7397 27.7165 22.8767 33.8894 19.5762C36.5647 18.1387 38.5876 16.9944 39.0225 16.6634L39.3533 16.408L38.7011 16.2945C37.7652 16.1243 35.0333 16.1338 33.8327 16.304C26.3175 17.3727 19.6908 21.2217 17.3748 25.8651C16.6847 27.2459 16.4012 28.4658 16.4201 30.0452C16.4201 30.6882 16.4012 31.2084 16.3822 31.2084C16.2499 31.2084 15.1344 30.4707 14.3971 29.8938C12.7428 28.6077 11.4005 26.9716 10.7671 25.4585C10.3228 24.3709 10.1905 23.586 10.2283 22.2714C10.2661 21.3068 10.3228 21.0042 10.578 20.2192C11.2587 18.2238 12.7144 16.3513 14.9359 14.6585C19.1709 11.4241 25.0224 8.82344 31.9232 7.0928C33.9178 6.60103 36.1676 6.12817 38.0015 5.81609C38.8051 5.68369 39.5802 5.55129 39.7315 5.52292C39.9867 5.46618 39.9867 5.46618 39.9867 4.68124V3.8963L39.6369 3.93413C39.4384 3.95304 38.6444 4.00978 37.8597 4.06653C26.8563 4.87038 15.8812 8.08579 7.69483 12.9184C3.73397 15.2543 1.2478 17.9968 0.321389 21.0515C0.103967 21.7797 0.0661548 22.0634 0.0567017 23.1699C0.0567017 24.229 0.085061 24.579 0.26467 25.2031C1.20998 28.532 4.37678 31.7663 8.93319 34.0644C10.6631 34.9345 12.1945 35.5586 14.7752 36.4571L16.7509 37.138L17.1952 37.9797C19.7003 42.7271 24.3323 46.2546 32.6133 49.7159C43.0022 54.0662 53.8828 57.1776 64.234 58.7663C69.0078 59.504 72.3731 59.7783 77.3549 59.835C81.3725 59.8823 83.5089 59.8161 86.3543 59.5229C88.7459 59.2865 96.4597 58.1705 98.4543 57.7733C106.537 56.1751 110.895 53.0164 112.776 47.3989C112.984 46.7937 113.135 46.283 113.116 46.2735C113.107 46.2546 112.133 46.7275 110.97 47.3138C102.737 51.456 94.777 53.5649 83.8965 54.4917C81.9775 54.6525 74.0085 54.6525 71.9383 54.4917C64.6688 53.9149 58.9591 52.9975 52.323 51.3425C43.5222 49.139 32.7456 45.0819 27.8867 42.1313C26.7429 41.441 23.8219 39.4928 23.8691 39.455C23.8786 39.436 24.3323 39.5495 24.8712 39.7103C32.2729 41.8571 41.3952 43.2945 51.2076 43.8809C59.3845 44.3632 72.1651 44.0984 79.2172 43.3135C89.5967 42.1408 98.6906 39.7481 107.435 35.8802C115.366 32.3716 119.535 28.428 120.783 23.2455C121.009 22.3093 121.009 20.172 120.783 19.2262C120.196 16.7485 118.949 14.6774 116.737 12.5212C115.196 11.0269 113.74 9.93938 111.188 8.39787C104.514 4.3597 94.9755 1.28614 85.8816 0.236405C85.1537 0.160748 84.3975 0.0661772 84.2084 0.0378059C83.9532 -2.2463e-05 83.8492 0.0188917 83.8492 0.104006Z\" fill=\"white\"/>\r\n            <path d=\"M57.0591 30.3194C52.7295 30.7639 49.4588 31.4543 46.9159 32.4473L45.9233 32.835L45.98 33.1282C46.1312 33.8564 46.7362 34.8399 47.5492 35.6627C49.4398 37.573 52.0867 38.4714 56.7471 38.793C58.5905 38.9159 61.4359 38.8119 63.8559 38.5376C65.6331 38.3296 69.5561 37.6676 70.6621 37.3839C73.0443 36.7786 74.4528 35.5776 74.4339 34.1685C74.415 33.0336 73.2617 32.1163 70.9363 31.407C69.2914 30.9058 68.7337 30.8301 63.336 30.31C61.5682 30.1398 58.7323 30.1398 57.0591 30.3194Z\" fill=\"white\"/>\r\n            <path d=\"M115.65 32.5134C114.676 33.3173 112.766 34.7264 111.452 35.6154C103.001 41.2991 93.2173 44.6753 80.5123 46.2924C72.8174 47.2665 62.8349 47.8528 59.9801 47.4935C59.4601 47.4273 57.7586 47.2003 56.1988 47.0017C52.3325 46.5005 51.5101 46.4248 49.5627 46.4248C47.8423 46.4248 46.982 46.5005 45.772 46.7653C45.0158 46.9166 43.7963 47.3138 43.3993 47.5218L43.1535 47.6448L43.3898 47.7015C44.0232 47.8434 49.3358 48.6 52.7484 49.0255C60.5378 50.0091 66.5784 50.4252 73.2144 50.4252C81.2023 50.4252 87.7061 49.7726 94.673 48.2784C104.873 46.0844 110.677 43.077 113.863 38.3485C114.392 37.5541 115.328 35.6626 115.602 34.8021C115.829 34.1117 116.283 32.1352 116.236 32.0879C116.217 32.069 115.952 32.2581 115.65 32.5134Z\" fill=\"white\"/>\r\n            <path d=\"M24.6254 47.4462C25.4478 48.8742 27.1305 51.0872 28.5673 52.6382C36.7821 61.5373 50.0448 66.663 69.0078 68.2802C74.018 68.7058 79.8506 68.876 87.2996 68.8192C93.4442 68.7814 94.172 68.7341 96.6677 68.2802C100.411 67.6087 103.256 66.1334 104.986 63.9867C105.695 63.1072 106.527 61.4995 106.82 60.4308C107.028 59.6837 107.312 58.0571 107.255 57.9909C107.236 57.972 106.669 58.2935 105.998 58.6907C100.449 62.0385 94.0113 63.9583 86.118 64.6014C84.3502 64.7527 79.2456 64.7527 77.1848 64.6014C67.3819 63.9205 57.1536 61.5373 45.7153 57.2532C41.6127 55.7117 40.0623 54.993 36.9617 53.1678C35.9975 52.6098 34.3243 51.6168 33.2277 50.9737C30.751 49.5268 28.7186 48.4865 27.1588 47.8718C26.1001 47.4557 24.6916 47.0017 24.4552 47.0017C24.408 47.0017 24.4836 47.2003 24.6254 47.4462Z\" fill=\"white\"/>\r\n            <path d=\"M44.3068 67.3061L43.957 67.3439L44.6849 68.1951C49.0239 73.2735 57.5601 77.4346 66.3137 78.7303C69.868 79.2599 74.4055 79.2977 77.3266 78.8154C80.966 78.2196 84.0572 77.0847 86.5717 75.4014C87.4981 74.7772 88.7365 73.7747 89.3226 73.16L89.6534 72.8196H88.4245C87.1578 72.8196 84.5582 72.9709 80.5501 73.2924C76.3623 73.614 74.2732 73.6991 71.5129 73.6423C66.1246 73.5289 64.2812 73.1127 56.6242 70.2851C51.718 68.4788 49.8369 67.9113 47.5303 67.5331C46.3109 67.3345 44.9118 67.2399 44.3068 67.3061Z\" fill=\"white\"/>\r\n            <path d=\"M46.5755 74.8719C46.7551 76.6782 47.6343 78.2859 49.4398 80.1111C50.5553 81.2365 52.5026 82.8158 53.9679 83.8088C58.2123 86.6554 64.5176 87.9794 70.3312 87.2323C74.7647 86.6648 78.2813 85.0477 80.9187 82.3808L81.8073 81.4729L76.5703 81.4162C71.0402 81.3594 69.679 81.3121 67.0699 81.0852C59.1293 80.4232 53.3061 78.6169 47.5776 75.0326C47.0576 74.7016 46.6039 74.4274 46.5755 74.4274C46.5566 74.4274 46.5566 74.626 46.5755 74.8719Z\" fill=\"white\"/>\r\n            <path d=\"M47.1711 84.6599C47.1711 85.8042 47.4925 86.7594 48.2582 87.9037C49.4493 89.7005 52.5405 92.2728 54.7997 93.351C56.7093 94.2588 58.6661 94.7317 60.8781 94.8263C64.8768 94.9776 68.5068 93.6252 71.1536 90.9961C71.8248 90.3247 72.6661 89.3033 72.5905 89.2371C72.496 89.152 69.9058 88.9818 67.344 88.8967C60.7647 88.6697 58.9024 88.5184 56.5769 87.9982C53.6748 87.3552 50.5364 85.9933 47.9557 84.2532C47.5776 83.9979 47.2467 83.7898 47.2183 83.7898C47.19 83.7898 47.1711 84.187 47.1711 84.6599Z\" fill=\"white\"/>\r\n            <path d=\"M45.2805 94.8452C45.2805 95.0059 45.8476 96.5569 46.2352 97.4364C46.982 99.1671 48.4473 101.446 49.9881 103.271C50.9429 104.406 52.9091 106.326 54.0719 107.262L54.9699 107.991L55.0266 107.735C55.0644 107.593 55.159 107.139 55.2346 106.723C55.556 104.964 56.3406 103.584 58.2029 101.484C59.7532 99.7345 60.6701 98.5807 61.1428 97.7863C61.3697 97.408 61.5398 97.0865 61.5209 97.0676C61.502 97.0487 61.001 97.077 60.4055 97.1243C58.1178 97.3135 55.2441 97.2189 53.2683 96.8784C51.3399 96.5569 48.7214 95.876 46.4243 95.0911C45.3466 94.7317 45.2805 94.7128 45.2805 94.8452Z\" fill=\"white\"/>\r\n            </svg>\r\n          ]\r\n    }\r\n\r\n}","import { WeatherObject } from '../../Assets/Icons/Icons'\r\n\r\nimport React, { useContext } from 'react'\r\nimport { weatherContext } from \"../../Context/numberContext\"\r\n\r\n\r\nconst MainWeather = () => {\r\nlet Image = \"\";\r\n\r\nconst  { weathe } = useContext(weatherContext);\r\n\r\nconst Main = weathe.current.weather[0].main;\r\nif(weathe.current.dt > weathe.current.sunrise && weathe.current.dt <= weathe.current.sunset){\r\n    switch(Main){\r\n        case \"Rain\": case \"Drizzle\": \r\n            Image = WeatherObject.RainCloud;\r\n            break;\r\n        case \"Clear\":\r\n            Image = WeatherObject.Sun;\r\n            break;\r\n        case \"Snow\":\r\n            Image = WeatherObject.SnowCloud;\r\n            break;    \r\n        case \"Mist\": case \"Smoke\": case \"Haze\": case \"Fog\": case \"haze\":\r\n            Image = WeatherObject.Fog;\r\n            break;    \r\n        case \"Clouds\":\r\n            Image = WeatherObject.CloudSun;\r\n            break; \r\n        case \"Thunderstorm\": \r\n            Image = WeatherObject.Thunderstorm;\r\n            break; \r\n        case \"Tornado\": case \"Squall\":  \r\n            Image = WeatherObject.Tornado;\r\n            break;  \r\n        case \"Dust\": case \"Sand\":    case \"Ash\":\r\n            Image = WeatherObject.Wind;\r\n             break;                                  \r\n        default:\r\n            Image = WeatherObject.Tornado;\r\n            break;    \r\n     }\r\n\r\n     if(Main === \"Clouds\"){\r\n        if(weathe.current.clouds > 0 && weathe.current.clouds <= 50){\r\n            Image = WeatherObject.CloudSun;\r\n        }else{\r\n            Image = WeatherObject.Cloud;\r\n     }\r\n    }\r\n\r\n}else{\r\n    switch(Main){\r\n        case \"Rain\": case \"Drizzle\": \r\n            Image =WeatherObject.RainCloud;\r\n            break;\r\n        case \"Clear\":\r\n            Image = WeatherObject.Moon;\r\n            break;\r\n        case \"Snow\":\r\n            Image = WeatherObject.SnowCloud;\r\n            break;    \r\n        case \"Mist\": case \"Smoke\": case \"Haze\": case \"Fog\": case \"haze\":\r\n            Image = WeatherObject.Fog;\r\n            break;    \r\n        case \"Clouds\":\r\n            Image = WeatherObject.CloudMoon;\r\n            break; \r\n        case \"Thunderstorm\":\r\n            Image = WeatherObject.Thunderstorm;\r\n            break; \r\n        case \"Tornado\": case \"Squall\": \r\n            Image = WeatherObject.Tornado;\r\n            break;   \r\n        case \"Dust\": case \"Sand\": case \"Ash\":\r\n            Image = WeatherObject.Wind;\r\n             break;                                  \r\n        default:\r\n            Image = WeatherObject.Moon;\r\n            break;    \r\n     }\r\n}\r\n\r\n    return( \r\n      <div> \r\n          {Image.data[0]}\r\n           </div>  \r\n    )\r\n}\r\n\r\nexport default MainWeather;","import Day from './Day'\r\nimport React, { useContext } from 'react'\r\nimport { weatherContext } from \"../../Context/numberContext\"\r\nimport MainWeather from './MainWeather'\r\n\r\nconst Four = () => {\r\n    const  { weathe } = useContext(weatherContext);\r\n\r\n    return(\r\n        <>\r\n        <div className='Four-one' >\r\n            <h1>{Math.round(weathe.current.temp)}°</h1>\r\n            <ul> \r\n               <li>Humidity: {Math.round(weathe.current.humidity)}%</li>\r\n               <li>Pressure: {Math.round(weathe.current.pressure)} hPa</li>\r\n               <li>Wind speed: {weathe.current.wind_speed} m/s</li>\r\n            </ul>\r\n        </div>\r\n        <div className='Four-two' >\r\n         <MainWeather />\r\n        </div>\r\n        <div className='Four-three' >\r\n            <li><strong>{weathe.current.weather[0].main}</strong></li>\r\n            <li>Feels like {Math.round(weathe.current.feels_like)}°</li>\r\n            <li>{weathe.current.weather[0].description}</li>\r\n        </div>\r\n        <div className='Four-four'>\r\n            <div id=\"day-one\"> <Day text=\"Mon\" temp={weathe.daily[0]} rain=\"8\" /></div>\r\n            <div id=\"day-two\"> <Day text=\"Mon\" temp={weathe.daily[1]} rain=\"8\" /></div>\r\n            <div id=\"day-three\"> <Day text=\"Mon\" temp={weathe.daily[2]} rain=\"8\" /></div>\r\n            <div id=\"day-four\"> <Day text=\"Mon\" temp={weathe.daily[3]} rain=\"8\" /></div>\r\n            <div id=\"day-five\"> <Day text=\"Mon\" temp={weathe.daily[4]} rain=\"8\" /></div>\r\n            <div id=\"day-six\"> <Day text=\"Mon\" temp={weathe.daily[5]} rain=\"8\" /></div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Four;","\r\n\r\nconst Colors =  {\r\n    ColorOne: {\r\n        primary: \"rgb(47, 62, 5)\",\r\n        secondary: \"rgb(215, 229, 165)\",\r\n        transparent: \"rgb(47, 62, 5, 0.7)\",\r\n    },\r\n    ColorTwo: {\r\n        primary: \"rgb(114, 109, 14)\",\r\n        secondary: \"rgb(215, 229, 165)\",\r\n        transparent: \"rgb(114, 109, 14, 0.7))\",\r\n    },\r\n    ColorThree: {\r\n        primary: \"rgb(32, 60, 88)\",\r\n        secondary: \"rgb(191, 223, 255)\",\r\n        transparent: \"rgb(32, 60, 88, 0.7)\",\r\n    },\r\n    ColorFour: {\r\n        primary: \"rgb(7, 25, 58)\",\r\n        secondary: \"rgb(133, 164, 195)\",\r\n        transparent: \"rgb(7, 25, 58, 0.7)\",\r\n    },\r\n    ColorFive: {\r\n        primary: \"rgb(46, 39, 63)\",\r\n        secondary: \"rgb(179, 129, 192)\",\r\n        transparent: \"rgb(46, 39, 63, 0.7)\",\r\n    },\r\n    ColorSix: {\r\n        primary: \"rgb(70, 47, 49)\",\r\n        secondary: \"rgb(244, 231, 225)\",\r\n        transparent: \"rgb(70, 47, 49, 0.7)\",\r\n    },\r\n    ColorSeven: {\r\n        primary: \"rgb(1, 57, 34)\",\r\n        secondary: \"rgb(215, 229, 165)\",\r\n        transparent: \"rgb(1, 57, 34, 0.7)\",\r\n    },\r\n    \r\n   \r\n   \r\n   \r\n   \r\n    \r\n   \r\n    \r\n   \r\n    \r\n   \r\n    \r\n   \r\n    \r\n    \r\n   \r\n    \r\n   \r\n    \r\n}\r\n\r\nexport default Colors;","import React, { useContext } from 'react'\r\nimport { weatherContext } from \"../../Context/numberContext\"\r\nimport Color from '../../Colors/Color'\r\n\r\nconst BgImage = ({cla}) => {\r\n    const  { weathe, setColorScheme, background } = useContext(weatherContext);\r\n    const main = weathe.current.weather[0].main;\r\n    let image = \"\"\r\n\r\n    console.log(background)\r\n    if(weathe.current.dt > weathe.current.sunrise && weathe.current.dt <= weathe.current.sunset){\r\n        switch(main){\r\n            case \"Rain\": case \"Drizzle\": \r\n                image = background[9].fields.file.url;\r\n                setColorScheme(Color.ColorThree);\r\n                break;\r\n            case \"Clear\":\r\n                image = background[0].fields.file.url;\r\n                setColorScheme(Color.ColorOne);\r\n                break;\r\n            case \"Snow\":\r\n                image = background[3].fields.file.url;\r\n                setColorScheme(Color.ColorOne);\r\n                break;    \r\n            case \"Mist\": case \"Smoke\": case \"Haze\": case \"Fog\": case \"haze\":\r\n                image = background[11].fields.file.url;\r\n                setColorScheme(Color.ColorThree);\r\n                break;    \r\n            case \"Clouds\":\r\n                image = background[0].fields.file.url;\r\n                setColorScheme(Color.ColorOne);\r\n                break; \r\n            case \"Thunderstorm\": case \"Tornado\": case \"Squall\":\r\n                image = background[1].fields.file.url;\r\n                setColorScheme(Color.ColorSeven);\r\n                break; \r\n            case \"Dust\": case \"Sand\":    case \"Ash\":\r\n                image = background[7].fields.file.url;\r\n                setColorScheme(Color.ColorTwo);\r\n                 break;                                  \r\n            default:\r\n                image = background[7].fields.file.url;\r\n                setColorScheme(Color.ColorOne);\r\n                break;    \r\n         }\r\n\r\n         if(main === 'Clouds'){\r\n            if(weathe.current.clouds > 0 && weathe.current.clouds <= 30){\r\n                setColorScheme(Color.ColorThree);\r\n                image = background[0].fields.file.url;\r\n            }else if(weathe.current.clouds > 30 && weathe.current.clouds <=60){\r\n                setColorScheme(Color.ColorThree);\r\n                image = background[4].fields.file.url;\r\n            }else{\r\n                setColorScheme(Color.ColorOne);\r\n                image = background[8].fields.file.url;\r\n            }\r\n        \r\n         }\r\n    }else{\r\n        switch(main){\r\n            case \"Rain\": case \"Drizzle\": \r\n                image = background[2].fields.file.url;\r\n                setColorScheme(Color.ColorFour);\r\n                break;\r\n            case \"Clear\":\r\n                image = background[5].fields.file.url;\r\n                setColorScheme(Color.ColorFive);\r\n                break;\r\n            case \"Snow\":\r\n                image = background[3].fields.file.url;\r\n                setColorScheme(Color.ColorOne);\r\n                break;    \r\n            case \"Mist\": case \"Smoke\": case \"Haze\": case \"Fog\": case \"haze\":\r\n                image = background[6].fields.file.url;\r\n                setColorScheme(Color.ColorFour);\r\n                break;    \r\n            case \"Clouds\":\r\n                image = background[10].fields.file.url;\r\n                setColorScheme(Color.ColorSix);\r\n                break; \r\n            case \"Thunderstorm\": case \"Tornado\": case \"Squall\":\r\n                image = background[1].fields.file.url;\r\n                setColorScheme(Color.ColorSeven);\r\n                break; \r\n            case \"Dust\": case \"Sand\": case \"Ash\":\r\n                image = background[0].fields.file.url;\r\n                setColorScheme(Color.ColorFive);\r\n                 break;                                  \r\n            default:\r\n                image = background[0].fields.file.url;\r\n                setColorScheme(Color.ColorSix);\r\n                break;    \r\n         }\r\n    }\r\n\r\n\r\n\r\n   return(\r\n      <>\r\n      <img src={image}  alt=\"weather\" className={cla} style={{width: \"100%\", height: \"100%\"}} id='bg' />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default BgImage;","import './body.css'\r\nimport One from './One'\r\nimport Three from './Three'\r\nimport Four from './Four'\r\nimport BgImage from './BgImage';\r\nimport React, { useContext } from 'react'\r\nimport { weatherContext } from '../../Context/numberContext';\r\n\r\nconst Body = () => {  \r\n   const {colorScheme} = useContext(weatherContext)\r\n    return(\r\n        <> \r\n          <div className=\"body\">\r\n             <div className=\"body-container\">\r\n              <BgImage cla=\"\" /> \r\n                <div id=\"one\">\r\n                   <One />\r\n                </div>\r\n                <div id=\"two\"></div>\r\n                <div id=\"three\">\r\n                   <Three />\r\n                </div>\r\n                <div id=\"four\" style={{background: colorScheme.transparent}}> \r\n                    <Four />\r\n                </div>\r\n                <div id=\"five\"></div>\r\n             </div> \r\n             <BgImage cla=\"backGround\"/>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Body;","import Header from \"./Header/Header\";\r\nimport Footer from './Footer/Footer';\r\nimport Body from \"./Body/Body\";\r\nimport './component.css';\r\n\r\nconst Component = () => {\r\n \r\n    return(\r\n        <>\r\n          <Header />\r\n          <Body />\r\n          <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Component;\r\n","import axios from 'axios'\r\n\r\nexport const getWeather = (setData, lat, long) => {\r\n  const key = process.env.REACT_APP_WEATHER_KEY\r\n\r\n    const baseURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&units=metric&appid=${key}`\r\n   \r\n    axios\r\n   .get(baseURL)\r\n   .then(response => {\r\n    const dataRetrived = response.data\r\n    setData(dataRetrived)\r\n  })\r\n}","import React, { useContext } from 'react'\r\nimport { weatherContext } from '../../Context/numberContext';\r\nimport { getWeather } from '../../Service/getWholeWeather'\r\n\r\n\r\nconst PrintList = () => {\r\n\r\n    const  { searchItem, setHistory, history, setToggle, setSingleCountry, setWeather, country } = useContext(weatherContext);\r\n\r\n    const countryClick = (x) => {\r\n        if( history.find(y => y.name === x.name) === undefined){\r\n            setHistory(prevValue =>[x, ...prevValue]);\r\n        }\r\n        else{\r\n            const temp =  history.filter(item => item.name !== x.name)\r\n            setHistory([x, ...temp])\r\n        }\r\n\r\n        if(x.latlng === undefined){\r\n            const countryData = country.find(z => {\r\n                return( z.name === x.country)\r\n             })\r\n            setSingleCountry(\r\n                {\r\n                    \"name\": countryData.name,\r\n                    \"alpha3Code\": countryData.alpha3Code,\r\n                    \"capital\": x.name.split(',')[0],\r\n                    \"latlng\": [\r\n                      x.lat,\r\n                      x.lon\r\n                    ],\r\n                    \"flag\": countryData.flag\r\n                  }\r\n            )\r\n            setToggle(false);\r\n            getWeather(setWeather, x.lat, x.lon)\r\n        }else{\r\n            setSingleCountry(x);\r\n            setToggle(false);\r\n            getWeather(setWeather, x.latlng[0], x.latlng[1])\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    \r\n    return(\r\n        <div className=\"list-component\">\r\n          { searchItem ?\r\n          searchItem.slice(0, 10).map((x) => {\r\n             return(\r\n               <div key={x.name} onClick={() => countryClick(x)}> \r\n                  <p>{x.name}</p>\r\n               </div>\r\n             )\r\n           }) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrintList;","import React, { useContext, useEffect, useRef } from 'react'\r\n\r\nimport { weatherContext } from '../../Context/numberContext';\r\nimport PrintList from './PrintList';\r\nimport { cityPrediction } from '../../Service/cityPrediction';\r\n\r\nconst HeaderExtention = () =>{\r\n \r\n  const  { setSearchItem, country, history } = useContext(weatherContext);\r\n  const searchRef = useRef();\r\n  const [data, getData] = React.useState(\"\");\r\n\r\n  const handleChange = () => {\r\n   setSearchItem(country.filter(x => {\r\n     return(x.name.toUpperCase().match(searchRef.current.value.toUpperCase()))\r\n   }))\r\n   \r\n   if(searchRef.current.value === \"\") { setSearchItem(history) }\r\n  }\r\n   \r\n  const svghandleClick = () => { \r\n   \r\n    cityPrediction(searchRef.current.value, getData)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(data){\r\n      setSearchItem([...data])\r\n    }\r\n  }, [data, setSearchItem])\r\n\r\n    return(\r\n      <div className=\"header-extension\"  >\r\n        <div className=\"input-box\">\r\n           <input type=\"text\"  placeholder=\"Search\" ref={searchRef} onChange={() => handleChange()}/>\r\n           <svg onClick={() => svghandleClick()} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14V14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z\" fill=\"black\"/>\r\n</svg>\r\n        </div>\r\n        <PrintList />\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default HeaderExtention;","import axios from \"axios\"\r\n\r\n\r\nexport const cityPrediction = (input, setData) => {\r\n    \r\n    const key = process.env.REACT_APP_CITY_KEY\r\n    axios\r\n   .get(`http://api.weatherapi.com/v1/search.json?key=${key}&q=${input}`)\r\n  .then(response => {\r\n    const dataRetrived = response.data\r\n    setData(dataRetrived)\r\n  })\r\n}","import * as contentful from 'contentful'\r\n\r\nconst space = process.env.REACT_APP_SPACE_ID\r\nconst token = process.env.REACT_APP_ACCESS_TOKEN\r\n\r\nexport const client = contentful.createClient({\r\n  space: space,\r\n  accessToken: token\r\n})","import './App.css';\nimport React, { useState, useEffect } from \"react\"\nimport Component from './Components/Component';\nimport { getCountries } from './Service/getCountries';\nimport { weatherContext } from './Context/numberContext'\nimport HeaderExtention from './Components/Header/HeaderExtention';\nimport { getWeather } from './Service/getWholeWeather';\nimport axios from 'axios';\nimport { client } from './Service/assets'\n\n\nfunction App() {\n\n  const [weathe, setWeather] = useState(null);\n  const [background, setBackground] = useState(null);\n  const [singleCountry, setSingleCountry] = useState({\n    \"name\": \"Estonia\",\n    \"alpha3Code\": \"EST\",\n    \"capital\": \"Tallinn\",\n    \"latlng\": [\n      59.0,\n      26.0\n    ],\n    \"flag\": \"https://restcountries.eu/data/est.svg\"\n  })\n  \n  const [ip, setIP] = useState({\n    \"latitude\": 59.4339,\n    \"longitude\": 24.7281,\n  })\n\n  const getData = async () => {\n    const res = await axios.get('https://geolocation-db.com/json/')\n    setIP(res.data)\n  }\n\n  useState(() => {\n    getData();\n  }, [ip])\n\n  useEffect(() => {\n    if(ip){\n   getWeather(setWeather, ip.latitude, ip.longitude)\n    } \n  }, [setWeather,ip])\n\n  const [toggle, setToggle] = useState(false);\n  const [country, setCountry] = useState(\"\");\n  const [colorScheme, setColorScheme] = useState(\n    {\n      Color: \"\",\n      Weather: \"\"\n    }\n  );\n  const [history, setHistory] = useState([{\n   \"name\": \"France\",\n   \"alpha3Code\": \"FRA\",\n   \"capital\": \"Paris\",\n   \"latlng\": [\n    46.0,\n    2.0\n    ],\n   \"flag\": \"https://restcountries.eu/data/fra.svg\",\n },\n {\n   \"name\": \"Germany\",\n   \"alpha3Code\": \"DEU\",\n   \"capital\": \"Berlin\",\n   \"latlng\": [\n    51.0,\n    9.0\n   ],\n   \"flag\": \"https://restcountries.eu/data/deu.svg\",\n },\n {\n   \"name\": \"Finland\",\n   \"alpha3Code\": \"FIN\",\n   \"capital\": \"Helsinki\",\n   \"latlng\": [\n    64.0,\n    26.0\n    ],\n   \"flag\": \"https://restcountries.eu/data/fin.svg\",\n }\n])\n  const [searchItem, setSearchItem] = useState(history);\n  const constant = 'con';\n  useEffect(() => {\n    getCountries(setCountry);\n  }, [constant])\n\n  const handleClick = () => {\n     if(toggle===true){\n      setToggle(false)\n     }\n  }\n\n useEffect(() => {\n   client.getEntries()\n   .then((response) => {\n     setBackground(response.includes.Asset)\n   })\n   .catch(console.error)\n }, [constant])\n  return (\n    <>\n      { weathe !== null ? \n        <>\n    <weatherContext.Provider value={{country, searchItem, setSearchItem, setHistory, history, toggle, setToggle, singleCountry, setSingleCountry, weathe, setWeather, colorScheme, setColorScheme, background }}>\n       <div className=\"App\" onClick={() => handleClick()}> \n          <Component />\n       </div>\n       {toggle?<HeaderExtention /> : null} \n       </weatherContext.Provider>   \n       </>\n       :<div> Loding... </div>}\n       </>\n  );\n}\n\nexport default App;\n","import axios from 'axios'\r\n\r\nexport const getCountries = (setData) => {\r\n\r\n    axios\r\n   .get('https://restcountries.eu/rest/v2/all')\r\n  .then(response => {\r\n    const dataRetrived = response.data\r\n    setData(dataRetrived)\r\n  })\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}